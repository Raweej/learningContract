/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { RWBank, RWBankInterface } from "../../contracts/RWBank";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516104ef3803806104ef83398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b61045e806100916000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806312065fe0146100515780632e1a7d4d1461006f578063a9059cbb14610084578063b6b55f2514610097575b600080fd5b6100596100aa565b60405161006691906103da565b60405180910390f35b61008261007d366004610385565b6100bd565b005b610082610092366004610328565b6101aa565b6100826100a5366004610385565b610244565b3360009081526020819052604090205490565b33600090815260208190526040812080548392906100dc9084906103fb565b909155505060015460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb9061011390339085906004016103c1565b602060405180830381600087803b15801561012d57600080fd5b505af1158015610141573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610165919061035e565b50336001600160a01b03167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243648260405161019f91906103da565b60405180910390a250565b6001600160a01b038216600090815260208190526040812080548392906101d29084906103e3565b909155505033600090815260208190526040812080548392906101f69084906103fb565b90915550506040516001600160a01b0383169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906102389085906103da565b60405180910390a35050565b33600090815260208190526040812080548392906102639084906103e3565b90915550506001546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061029c9033903090869060040161039d565b602060405180830381600087803b1580156102b657600080fd5b505af11580156102ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ee919061035e565b50336001600160a01b03167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c8260405161019f91906103da565b6000806040838503121561033a578182fd5b82356001600160a01b0381168114610350578283fd5b946020939093013593505050565b60006020828403121561036f578081fd5b8151801515811461037e578182fd5b9392505050565b600060208284031215610396578081fd5b5035919050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b90815260200190565b600082198211156103f6576103f6610412565b500190565b60008282101561040d5761040d610412565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212207cf7892e5e5b3b126d8ff8ee0137bbafef1db449b6040dd2cdc346d51587e7aa64736f6c63430008000033";

type RWBankConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RWBankConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RWBank__factory extends ContractFactory {
  constructor(...args: RWBankConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    token_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RWBank> {
    return super.deploy(token_, overrides || {}) as Promise<RWBank>;
  }
  override getDeployTransaction(
    token_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(token_, overrides || {});
  }
  override attach(address: string): RWBank {
    return super.attach(address) as RWBank;
  }
  override connect(signer: Signer): RWBank__factory {
    return super.connect(signer) as RWBank__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RWBankInterface {
    return new utils.Interface(_abi) as RWBankInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): RWBank {
    return new Contract(address, _abi, signerOrProvider) as RWBank;
  }
}
